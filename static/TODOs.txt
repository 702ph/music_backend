
01_server_and_javascript

[X] refactoring postSong(). some code should be out
[X] add table title
[X] remove test selecting table
------------------------------------

02_server_and_javascript
[x] type check (audio/mpeg)!!

before doing task, talk about it with some
[X] deleting song on browser
[X] editing entry i.e.: title, artist, album... on browser
[X] save above changes on the server side

[X] server side: extract mp3 tag information for db

[X] prevent from file being drag and dropped outside of drop area
[X] pack originalRows in editStartButton() and give it over to editCancelButton() when it is called

[X] avoid 0 row to be colored

testing issues...4

---------------------------------

03_server_and_javascript

[X] let upload button remain in the drop area for non-mouse environment

[X] refactoring deletion with promise.all (problem with song list update)
[X] delete cancel button
[X] change the style of song deletion / and refactoring
[X] highlight to be deleted songs

[X] audio context: change volume
[X] audio context: change position
[X] audio context: replace start/stop button

[X] server side: implement create_at
[X] front end : remove create_at
[X] sever side: fix date extraction from mp3 file

[X] show error message when try to upload in offline

[x] set default song id on load

--------------------
04

[X] prevent from several music being played at one time
[X] or while other is being played.

[X] start/pause icon change
[X] show album & title

[x] fix seek in pause

[X] clear audio context after play
[X] clear audio context after play automatically (onended) => implemented. butnot with onended.

[X] play next song automatically at end
[X] implement for repeat button
[X] implement for random button
[X] fix repeat play
[X] fix random play
[X] fix: TypeError: Cannot read property 'id' of undefined

[X] implement for forward button
[X] implement for back button

[x] implement clickable progressbar
[x] implement time counter

[x] add volume controller (new version)

[X] remove classes
[x] refactor time converter

[X] print lyrics?

[] refactor seek (maybe in class) => no class is allowed. maybe in let audio = {}
[] reflect play back position to start at the first time => this is complicated. we have to load audiobuffer to get duration.

[] separate function for start/pause
[] start -> play
[] replay
[] resume (from pause)

----
05

[] remove not-in-used components

[] audio information durchlaufen lassen
[] improve clickable progressbar behaviour (when going back)

[] hide /static/
[] log-in function

[X] audio visualization?

[] play next song by using sourceBufferNode.onended

[] replace requestAnimationFrame with setTimeout or something and then it liter?

[] defineProperty with prototype?
https://www.sejuku.net/blog/25328

[] close audio context if pause is more than 10 minutes?

[] server side: try, catch
[] clean up server code

[] take this out of all functions: let songSelector = document.querySelector("#songSelectorTable");
let rows = songSelector.children[0].rows; //<tr> in <table>

-------------------

backlog

[] replace ie. .onclick = () => { };  with  .onclick = ({ });  ==> no! sometime it doesn't work!

[] documentation (nach Vorlage)

[] refactor two document.addEventListener('click',) for table

[] SQLAlchemy integration?

[] automatic continuously playing by using array
[] hide drop are by default or show in small size
[] show drop area only when file(s) are being dragged?

[] stop playing music when at the end of file

[] implement multiple file upload

[] define all functions with same manner
[] check if we need api = Api(app)
[] understand the function of CORS(app)

[] refactoring table selection code

[] remove /static/ from URL. it's not beautiful

[] replace var by let &/ const

[] implement slider for player

[] error handling for db when there's no data
